import imageColors from "../data/image-colors.json"
import fs from "fs"


type Hex = string
type HSLA = [number, number, number, number]


type Colors = {
    light: Color
    dark: Color
}

type Color = {
    hex: string
    hsl: number[]
}

type RowColor = {
    text: Hex
    bg_light: HSLA
    bg_dark: HSLA
}

type EventColors = {
    eventId: string
    darkMode: RowColor
    lightMode: RowColor
}

function getRowColorScheme(eventId: string, imageColors: Colors): EventColors {

    const [h, s, l] = imageColors.light.hsl

    return {
        eventId,
        lightMode: {
            text: imageColors.dark.hex,
            bg_dark: [h, s, l, 0.4],
            bg_light: [h, s, l, 0.8],
        },
        darkMode: {
            text: "#eee",
            bg_dark: [h, s, l, 0.4],
            bg_light: [h, s, l, 0.7],
        },
    }
}


function formatHSLA(hsla: [number, number, number, number]): string {
    const [H, S, L, A] = hsla
    return `hsla(${H}, ${S}%, ${L}%, ${A})` // example: hsla(219, 71%, 43%, 0.391)
}

function createEventSCSS(colors: EventColors): string {

    const scss = `
[data-event-id=${colors.eventId}] {
    
    &[data-dark=true][data-even=true] {
        color: ${colors.darkMode.text};
        background-color: ${formatHSLA(colors.darkMode.bg_dark)};
    }
    &[data-dark=true][data-even=false] {
        color: ${colors.darkMode.text};
        background-color: ${formatHSLA(colors.darkMode.bg_light)};
    }
    &[data-dark=false][data-even=true] {
        color: ${colors.lightMode.text};
        background-color: ${formatHSLA(colors.lightMode.bg_dark)};
    }
    &[data-dark=false][data-even=false] {
        color: ${colors.lightMode.text};
        background-color: ${formatHSLA(colors.lightMode.bg_light)};
    }
}`

    return scss
}



function createSCSS() {
    const colors = imageColors
    const eventColors = Object.entries(colors).map(([event_id, colors]) => getRowColorScheme(event_id, colors))
    let scss = eventColors.map(colors => createEventSCSS(colors)).join("\n\n")
    scss = "/*\nGENERATED BY src/scripts/create-row-styles.ts - DO NOT MODIFY\n*/\n" + scss
    fs.writeFileSync("src/styles/global_row_styles.scss", scss, { encoding: "utf-8" })
}

createSCSS()
